git config -l -> List configuration of git
git config -l --show-origin -> List where the configurations are stored
git config --global user.name "Username"
git config --global user.email "email"
explorer . -> open current directory in explorer
dir -> shows the directory structure in 
notepad "file-name" -> open a notepad with a file name.
Always use comments for commits in present tense about what the commit does.
git init
git add .
git commit -m "tell what is commiting"
git diff "filename" -> Gives difference between staged and unstaged things
git diff --staged -> Gives the difference between staging area and commit(git repository)
git config --global core.editor notepad -> changes default commit editor to notepad
Snapshots = Commits. This means whenever a single file is committed, Git takes note/status of the entire files in the folder.
With every snapshot, git creates a hash value. This hash value can be used to find out the status of the files at that checkout.
git log -> provides the commit lists with their hash values and associated datas
git log --pretty=oneline -> provides the commit lists with their has values only.
git checkout "first 5 or 6 characters of hash value of commit" - to move to previous state
git checkout master -> to return back to the original position
Ignore files in the working directory -> Refer to the Image "Ignore_Files_Guide.png"
git branch "Feature or Bug/Name" -> To create a new branch
git checkout branch_name -> To checkout to that branch
git merge "branch-name" -> To merge it with the master branch
git branch -d "branch-name" -> To delete a branch
git log --pretty=oneline --graph -> shows a graphical representation of commits
git remote add origin https://github.com/Eldhose-Varghese/Git_For_Beginners_Thomas_Claudius_Huber_MyProject.git -> This will create a repository named origin with url specified.
git remote -> see all remote repositories
git remote -v -> see all remote repositories with fetch and push commands
git remote show origin -> see all remote repositories with fetch,push commands as well as Head.
git push -u origin master -> Push the local repository master to remote repository origin
When used -u with push, use only git push as the master branch is already mentioned with u.
